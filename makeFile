CC = gcc
CFLAGS = -Wall -std=c99
LDFLAGS = -lm

SRC_DIR = src
OBJ_DIR = obj
BIN_DIR = bin

SRC_FILES = $(wildcard $(SRC_DIR)/*.c)
OBJ_FILES = $(patsubst $(SRC_DIR)/%.c,$(OBJ_DIR)/%.o,$(SRC_FILES))

LIB_DIR = lib

.PHONY: all clean

all: make loops recursives recursived loopd mains maindloop maindrec

make:
	mkdir -p $(BIN_DIR) $(OBJ_DIR) $(LIB_DIR)

loops: $(LIB_DIR)/libclassloops.a

recursives: $(LIB_DIR)/libclassrec.a

recursived: $(LIB_DIR)/libclassrec.so

loopd: $(LIB_DIR)/libclassloops.so

mains: $(BIN_DIR)/mains

maindloop: $(BIN_DIR)/maindloop

maindrec: $(BIN_DIR)/maindrec

$(LIB_DIR)/libclassloops.a: $(OBJ_FILES)
	ar rcs $@ $(OBJ_DIR)/basicClassification.o $(OBJ_DIR)/advancedClassificationLoop.o

$(LIB_DIR)/libclassrec.a: $(OBJ_FILES)
	ar rcs $@ $(OBJ_DIR)/basicClassification.o $(OBJ_DIR)/advancedClassificationRecursive.o

$(LIB_DIR)/libclassrec.so: $(OBJ_FILES)
	$(CC) -shared -o $@ $(OBJ_DIR)/basicClassification.o $(OBJ_DIR)/advancedClassificationRecursive.o

$(LIB_DIR)/libclassloops.so: $(OBJ_FILES)
	$(CC) -shared -o $@ $(OBJ_DIR)/basicClassification.o $(OBJ_DIR)/advancedClassificationLoop.o

$(OBJ_DIR)/%.o: $(SRC_DIR)/%.c
	$(CC) $(CFLAGS) -c $< -o $@

$(BIN_DIR)/mains: $(SRC_DIR)/main.c
	$(CC) $(CFLAGS) $^ -o $@ -L$(LIB_DIR) -lclassrec $(LDFLAGS)

$(BIN_DIR)/maindloop: $(SRC_DIR)/main.c
	$(CC) $(CFLAGS) $^ -o $@ -L$(LIB_DIR) -lclassloops $(LDFLAGS)

$(BIN_DIR)/maindrec: $(SRC_DIR)/main.c
	$(CC) $(CFLAGS) $^ -o $@ -L$(LIB_DIR) -lclassrec $(LDFLAGS)

clean:
	rm -rf $(BIN_DIR) $(OBJ_DIR) $(LIB_DIR)
